// <auto-generated />
using System;
using Calculator.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Calculator.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Calculator.Models.CertificateOfDeposit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PortfolioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("CertificateOfDeposits");

                    b.HasData(
                        new
                        {
                            Id = "256b6fe3-917b-477d-bd4f-7b28a6f89fa2",
                            AccountNumber = 123456789,
                            DateCreated = new DateTime(2020, 1, 16, 12, 11, 18, 214, DateTimeKind.Local).AddTicks(231),
                            InterestRate = 5m,
                            PortfolioId = "62a8842a-2feb-4330-8860-d1d0b28bcc5b",
                            Term = 12,
                            Type = "Normal"
                        });
                });

            modelBuilder.Entity("Calculator.Models.CreditCard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PortfolioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UsageByPercentage")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("CreditCards");

                    b.HasData(
                        new
                        {
                            Id = "3d09e3ac-6cb7-4079-9b31-d9f4ad1786f6",
                            AccountNumber = 123321123,
                            Balance = 500m,
                            DateCreated = new DateTime(2020, 1, 16, 12, 11, 18, 214, DateTimeKind.Local).AddTicks(3516),
                            Income = 1123m,
                            InterestRate = 17m,
                            PortfolioId = "62a8842a-2feb-4330-8860-d1d0b28bcc5b",
                            Type = "Normal",
                            UsageByPercentage = 50m
                        });
                });

            modelBuilder.Entity("Calculator.Models.Deposit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("AverageBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PortfolioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Deposits");

                    b.HasData(
                        new
                        {
                            Id = "74769c9e-0f23-4ee7-a542-a191081d4eea",
                            AccountNumber = 321321321,
                            AverageBalance = 5432m,
                            Cost = 500m,
                            DateCreated = new DateTime(2020, 1, 16, 12, 11, 18, 214, DateTimeKind.Local).AddTicks(7272),
                            InterestRate = 0.32m,
                            PortfolioId = "62a8842a-2feb-4330-8860-d1d0b28bcc5b",
                            Type = "Normal"
                        });
                });

            modelBuilder.Entity("Calculator.Models.Loan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("PortfolioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            Id = "02b856f9-06bd-4d00-b7ec-2e88d3a7f730",
                            AccountNumber = 54323453,
                            Balance = 9080m,
                            DateCreated = new DateTime(2020, 1, 16, 12, 11, 18, 215, DateTimeKind.Local).AddTicks(620),
                            Income = 500m,
                            InterestRate = 3.32m,
                            PortfolioId = "62a8842a-2feb-4330-8860-d1d0b28bcc5b",
                            Term = 48,
                            Type = "Car"
                        });
                });

            modelBuilder.Entity("Calculator.Models.Portfolio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Portfolios");

                    b.HasData(
                        new
                        {
                            Id = "62a8842a-2feb-4330-8860-d1d0b28bcc5b",
                            DateCreated = new DateTime(2020, 1, 16, 12, 11, 18, 210, DateTimeKind.Local).AddTicks(8425),
                            Name = "Nim Sum",
                            Type = "Normal"
                        });
                });

            modelBuilder.Entity("Calculator.Models.CertificateOfDeposit", b =>
                {
                    b.HasOne("Calculator.Models.Portfolio", null)
                        .WithMany("CertificateOfDeposits")
                        .HasForeignKey("PortfolioId");
                });

            modelBuilder.Entity("Calculator.Models.CreditCard", b =>
                {
                    b.HasOne("Calculator.Models.Portfolio", null)
                        .WithMany("CreditCards")
                        .HasForeignKey("PortfolioId");
                });

            modelBuilder.Entity("Calculator.Models.Deposit", b =>
                {
                    b.HasOne("Calculator.Models.Portfolio", null)
                        .WithMany("Deposits")
                        .HasForeignKey("PortfolioId");
                });

            modelBuilder.Entity("Calculator.Models.Loan", b =>
                {
                    b.HasOne("Calculator.Models.Portfolio", null)
                        .WithMany("Loans")
                        .HasForeignKey("PortfolioId");
                });
#pragma warning restore 612, 618
        }
    }
}
